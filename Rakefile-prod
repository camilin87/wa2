import 'Rakefile'

def webapp_path
    return File.join(basedir, "webapp/")
end

task :configure_pyenv_linux do
    alias_filename = "~/.bash_aliases"
    bash_profile = File.expand_path alias_filename

    if not File.exists? bash_profile or not File.readlines(bash_profile).grep(/python=python3/).any?
        `echo alias python=python3 >> #{alias_filename}`
        puts "WARNING: close this shell before proceeding"
    end
end

task :install_prod_dependencies do
    install_prod_system_packages
    install_pypi_prod_dependencies

    Rake::Task["configure_uwsgi"].execute
    Rake::Task["configure_nginx"].execute
end

def install_prod_system_packages
    pkg_dependencies = [
        "python-pip", "uwsgi", "nginx"
    ]
    install_system_dependencies_linux pkg_dependencies
end

def install_system_dependencies_linux(packages)
    packages.each do |pkg|
        sh "sudo apt-get install -y #{pkg}"
    end
end

def install_pypi_prod_dependencies
    prod_packages = [
        "python-forecastio", "bottle"
    ]
    sudo_install_pypi_packages prod_packages
end

task :configure_uwsgi do
    app_available_config = "/etc/uwsgi/apps-available/bottle.ini"
    lines = [
        "[uwsgi]",
        "socket = /run/uwsgi/app/bottle/socket",
        "chdir = #{webapp_path}",
        "master = true",
        "plugins = python",
        "file = app.py",
        "uid = www-data",
        "gid = www-data"
    ]
    sudo_write_config app_available_config, lines
    system "sudo ln -s #{app_available_config} /etc/uwsgi/apps-enabled/bottle.ini"
    sh "sudo service uwsgi restart"    
end

def sudo_write_config(file_path, lines)
    temp_path = File.join(basedir, "temp_file.txt")

    File.open(temp_path, "w") do |f|
        lines.each do |l|
            f.puts l
        end
    end

    sh "sudo mv #{temp_path} #{file_path}"
end

task :configure_nginx do
    nginx_config = "/etc/nginx/sites-available/bottle"
    lines = [
        "upstream _bottle {",
        "    server unix:/run/uwsgi/app/bottle/socket;",
        "}",
        "",
        "server {",
        "    listen [::]:80;",
        "    listen 80;",
        "    server_name deb.ngx.cc;",
        "    root #{webapp_path};",
        "",
        "    location / {",
        "        try_files $uri @uwsgi;",
        "    }",
        "",
        "    location @uwsgi {",
        "        include uwsgi_params;",
        "        uwsgi_pass _bottle;",
        "    }",
        "}"
    ]
    system "sudo service nginx stop"
    sudo_write_config nginx_config, lines
    system "sudo rm -f /etc/nginx/sites-enabled/default"
    system "sudo ln -s #{nginx_config} /etc/nginx/sites-enabled/bottle"
    sh "sudo service nginx start"
end
